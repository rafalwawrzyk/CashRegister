{"ast":null,"code":"import _defineProperty from \"/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { put, takeLatest, all, call } from 'redux-saga/effects';\nimport actionType from './userActionTypes';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure } from './userActions'; // google sign in\n\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    yield put(SignInFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(actionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\n} // email sign in\n// payload comes from action: actionType.EMAIL_SIGN_IN_START\n\nexport function* signInWithEmail(payload) {\n  const _payload$payload = payload.payload,\n        email = _payload$payload.email,\n        password = _payload$payload.password;\n\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    yield put(SignInFailure(err));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(actionType.EMAIL_SIGN_IN_START, signInWithEmail);\n} // try{\n//     await auth.signInWithEmailAndPassword(this.state.email,this.state.password);\n//     this.setState({\n//         email:'',\n//         password:''\n//     })\n// }catch(err){\n//     console.log(err)\n// }\n// sagas export\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/src/redux/user/userSagas.js"],"names":["put","takeLatest","all","call","actionType","auth","googleProvider","createUserProfileDocument","SignInSuccess","SignInFailure","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","err","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";;;;;;AAAA,SAAQA,GAAR,EAAYC,UAAZ,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAAQC,IAAR,EAAaC,cAAb,EAA4BC,yBAA5B,QAA4D,+BAA5D;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,eAA3C,C,CAMA;;AACA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AAAA,iBACgB,MAAML,IAAI,CAACM,eAAL,CAAqBL,cAArB,CADtB;AAAA,UACQM,IADR,QACQA,IADR;;AAEC,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BK,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CAACQ,aAAa;AACnBQ,MAAAA,EAAE,EAACF,YAAY,CAACE;AADG,OAEhBF,YAAY,CAACG,IAAb,EAFgB,EAAd,CAAT;AAIH,GARD,CAQC,OAAMC,GAAN,EAAU;AACP,UAAMlB,GAAG,CAACS,aAAa,CAACS,GAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMlB,UAAU,CAACG,UAAU,CAACgB,oBAAZ,EAAiCV,gBAAjC,CAAhB;AACH,C,CAID;AACA;;AACA,OAAO,UAAUW,eAAV,CAA0BC,OAA1B,EAAkC;AAAA,2BACZA,OAAO,CAACA,OADI;AAAA,QAC9BC,KAD8B,oBAC9BA,KAD8B;AAAA,QACxBC,QADwB,oBACxBA,QADwB;;AAErC,MAAG;AAAA,kBACgB,MAAMnB,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CADtB;AAAA,UACQZ,IADR,SACQA,IADR;;AAEC,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA2BK,IAA3B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CACLQ,aAAa;AAAEQ,MAAAA,EAAE,EAACF,YAAY,CAACE;AAAlB,OAAwBF,YAAY,CAACG,IAAb,EAAxB,EADR,CAAT;AAGH,GAPD,CAOC,OAAMC,GAAN,EAAU;AACP,UAAMlB,GAAG,CAACS,aAAa,CAACS,GAAD,CAAd,CAAT;AACH;AACJ;AAGD,OAAO,UAAUQ,kBAAV,GAA8B;AACjC,QAAMzB,UAAU,CAACG,UAAU,CAACuB,mBAAZ,EAAiCN,eAAjC,CAAhB;AACH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA,OAAO,UAAUO,SAAV,GAAqB;AACxB,QAAM1B,GAAG,CACL,CACIC,IAAI,CAACgB,mBAAD,CADR,EAEIhB,IAAI,CAACuB,kBAAD,CAFR,CADK,CAAT;AAMH","sourcesContent":["import {put,takeLatest,all,call} from 'redux-saga/effects'\nimport actionType from './userActionTypes'\nimport {auth,googleProvider,createUserProfileDocument} from '../../firebase/firebase.utils'\nimport {SignInSuccess, SignInFailure} from './userActions';\n\n\n\n\n\n// google sign in\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(SignInSuccess({\n            id:userSnapshot.id,\n            ...userSnapshot.data()\n        }))\n    }catch(err){\n        yield put(SignInFailure(err))\n    }\n}\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(actionType.GOOGLE_SIGN_IN_START,signInWithGoogle);\n}\n\n\n\n// email sign in\n// payload comes from action: actionType.EMAIL_SIGN_IN_START\nexport function* signInWithEmail(payload){\n    const {email,password} = payload.payload;\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        const userRef = yield call(createUserProfileDocument,user);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            SignInSuccess({id:userSnapshot.id,...userSnapshot.data()})\n        )\n    }catch(err){\n        yield put(SignInFailure(err))\n    }\n}\n\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(actionType.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\n\n// try{\n//     await auth.signInWithEmailAndPassword(this.state.email,this.state.password);\n//     this.setState({\n//         email:'',\n//         password:''\n//     })\n// }catch(err){\n//     console.log(err)\n// }\n\n\n// sagas export\nexport function* userSagas(){\n    yield all(\n        [\n            call(onGoogleSignInStart),\n            call(onEmailSignInStart)\n        ]\n    )\n}"]},"metadata":{},"sourceType":"module"}