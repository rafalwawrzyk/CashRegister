{"ast":null,"code":"import _defineProperty from \"/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { put, takeLatest, all, call } from 'redux-saga/effects';\nimport actionType from './userActionTypes';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure } from './userActions'; // get snapshot of user\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    yield put(SignInFailure(err));\n  }\n} // google sign in\n\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(SignInFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(actionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\n} // email sign in\n// payload comes from action: actionType.EMAIL_SIGN_IN_START\n\nexport function* signInWithEmail(payload) {\n  const _payload$payload = payload.payload,\n        email = _payload$payload.email,\n        password = _payload$payload.password;\n\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(SignInFailure(err));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(actionType.EMAIL_SIGN_IN_START, signInWithEmail);\n} // check user saga\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (err) {\n    yield put(SignInFailure(err));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(actionType.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSignOut() {\n  try {\n    yield auth.signOut();\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(actionType.SIGN_OUT_START, userSignOut);\n} // sagas export\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession)]);\n}","map":{"version":3,"sources":["/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/src/redux/user/userSagas.js"],"names":["put","takeLatest","all","call","actionType","auth","googleProvider","createUserProfileDocument","getCurrentUser","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","err","signInWithGoogle","signInWithPopup","user","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","userSignOut","signOut","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport actionType from './userActionTypes';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure,signOutSuccess,signOutFailure } from './userActions';\n\n\n// get snapshot of user\nexport function* getSnapshotFromUserAuth(userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\tconst userSnapshot = yield userRef.get();\n\t\tyield put(\n\t\t\tSignInSuccess({\n\t\t\t\tid: userSnapshot.id,\n\t\t\t\t...userSnapshot.data()\n\t\t\t})\n\t\t);\n\t} catch (err) {\n\t\tyield put(SignInFailure(err));\n\t}\n}\n\n\n// google sign in\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapshotFromUserAuth(user)\n\t} catch (err) {\n\t\tyield put(SignInFailure(err));\n\t}\n}\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(actionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\n\n\n// email sign in\n// payload comes from action: actionType.EMAIL_SIGN_IN_START\nexport function* signInWithEmail(payload) {\n\tconst { email, password } = payload.payload;\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user)\n\t} catch (err) {\n\t\tyield put(SignInFailure(err));\n\t}\n}\n\n\nexport function* onEmailSignInStart() {\n\tyield takeLatest(actionType.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\n\n// check user saga\n\nexport function* isUserAuthenticated(){\n    try{\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return\n        yield getSnapshotFromUserAuth(userAuth)\n    }catch(err){\n        yield put(SignInFailure(err))\n    }\n}\n\n\nexport function* onCheckUserSession(){\n    yield takeLatest(actionType.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\n\n\nexport function* userSignOut(){\n    try{\n        yield auth.signOut();\n    }catch(err){\n        yield put(signOutFailure(err))\n    }\n}\n\nexport function* onSignOutStart(){\n    yield takeLatest(actionType.SIGN_OUT_START, userSignOut)\n}\n\n\n\n// sagas export\nexport function* userSagas() {\n\tyield all([ call(onGoogleSignInStart), call(onEmailSignInStart),call(onCheckUserSession) ]);\n}\n"]},"metadata":{},"sourceType":"module"}