{"ast":null,"code":"var _jsxFileName = \"/home/rafal/Desktop/ecommerce-react-advanced/unikas-dev-shop/src/pages/shoppage/shoppage.jsx\";\nimport React from 'react';\nimport CollectionOverview from '../../components/collectionsOverview/collectionsOverview';\nimport { Route, Switch } from 'react-router-dom';\nimport CategoryPage from '../collection/collection';\nimport NoMatch404 from '../../components/404/404';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { getCollectionsDataFromDbAction } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/withSpinner/withSpinner';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CategoryPageWithSpinner = WithSpinner(CategoryPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const setCollection = this.props.setCollection;\n    const collectionRef = firestore.collection('shop'); // collectionRef.get().then((snapshot) => {\n    // \tconst collectionsFromDb = convertCollectionsSnapshotToMap(snapshot);\n    // \tsetCollection(collectionsFromDb)\n    // \tthis.setState({loading:false})\n    // })\n\n    fetch('https://firestore.googleapis.com/v1/projects/ecommerce-react-db/databases/(default)/documents/collections').then(res => res.json()).then(data => console.log(data)); //https://firestore.googleapis.com/v1/projects/ecommerce-react-db/databases/(default)/documents\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: otherProps => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        loading: loading\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: otherProps => React.createElement(CategoryPageWithSpinner, Object.assign({\n        loading: loading\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCollection: data => dispatch(getCollectionsDataFromDbAction(data))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/rafal/Desktop/ecommerce-react-advanced/unikas-dev-shop/src/pages/shoppage/shoppage.jsx"],"names":["React","CollectionOverview","Route","Switch","CategoryPage","NoMatch404","firestore","convertCollectionsSnapshotToMap","connect","getCollectionsDataFromDbAction","WithSpinner","CollectionOverviewWithSpinner","CategoryPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","setCollection","props","collectionRef","collection","fetch","then","res","json","data","console","log","render","match","path","otherProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,0DAA/B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,8BAAR,QAA6C,8BAA7C;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAGA,MAAMC,6BAA6B,GAAGD,WAAW,CAACT,kBAAD,CAAjD;AACA,MAAMW,uBAAuB,GAAGF,WAAW,CAACN,YAAD,CAA3C;;AAEA,MAAMS,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACPC,MAAAA,OAAO,EAAC;AADD,KAF8B;AAAA,SAMtCC,uBANsC,GAMZ,IANY;AAAA;;AAQtCC,EAAAA,iBAAiB,GAAE;AAAA,UACXC,aADW,GACM,KAAKC,KADX,CACXD,aADW;AAElB,UAAME,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,MAArB,CAAtB,CAFkB,CAGlB;AACA;AACA;AACA;AACA;;AACAC,IAAAA,KAAK,CAAC,2GAAD,CAAL,CACEC,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAEOG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFf,EARkB,CAWlB;AACA;;AAEEG,EAAAA,MAAM,GAAG;AAAA,UACEC,KADF,GACW,KAAKX,KADhB,CACEW,KADF;AAAA,UAEJf,OAFI,GAEO,KAAKD,KAFZ,CAEJC,OAFI;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKe,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGC,UAAD,IAAgB,oBAAC,6BAAD;AAA+B,QAAA,OAAO,EAAEjB;AAAxC,SAAqDiB,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKF,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGC,UAAD,IAAgB,oBAAC,uBAAD;AAAyB,QAAA,OAAO,EAAEjB;AAAlC,SAA+CiB,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;AAWH;;AApCkC;;AAwCvC,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACzChB,EAAAA,aAAa,EAAEQ,IAAD,IAAUQ,QAAQ,CAAC1B,8BAA8B,CAACkB,IAAD,CAA/B;AADS,CAAf,CAA3B;;AAKA,eAAenB,OAAO,CAAC,IAAD,EAAM0B,kBAAN,CAAP,CAAiCrB,QAAjC,CAAf","sourcesContent":["import React from 'react';\nimport CollectionOverview from '../../components/collectionsOverview/collectionsOverview';\nimport { Route, Switch } from 'react-router-dom';\nimport CategoryPage from '../collection/collection';\nimport NoMatch404 from '../../components/404/404'\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\nimport {connect} from 'react-redux'\nimport {getCollectionsDataFromDbAction} from '../../redux/shop/shopActions'\nimport WithSpinner from '../../components/withSpinner/withSpinner'\n\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CategoryPageWithSpinner = WithSpinner(CategoryPage)\n\nclass ShopPage extends React.Component {\n   \n\tstate = {\n\t\tloading:true\n\t}\n\n\tunsubscribeFromSnapshot = null;\n\t\n\tcomponentDidMount(){\n\t\tconst {setCollection} = this.props;\n\t\tconst collectionRef = firestore.collection('shop');\n\t\t// collectionRef.get().then((snapshot) => {\n\t\t// \tconst collectionsFromDb = convertCollectionsSnapshotToMap(snapshot);\n\t\t// \tsetCollection(collectionsFromDb)\n\t\t// \tthis.setState({loading:false})\n\t\t// })\n\t\tfetch('https://firestore.googleapis.com/v1/projects/ecommerce-react-db/databases/(default)/documents/collections')\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => console.log(data))\n\t\t//https://firestore.googleapis.com/v1/projects/ecommerce-react-db/databases/(default)/documents\n\t}\n\n    render() {\n        const {match} = this.props;\n\t\tconst {loading} = this.state;\n        return (\n            <div>\n                <Switch>\n                    <Route exact path={`${match.path}`} render={(otherProps) => <CollectionOverviewWithSpinner loading={loading} {...otherProps}/>} />\n                    <Route path={`${match.path}/:collectionId`} render={(otherProps) => <CategoryPageWithSpinner loading={loading} {...otherProps}/>} />\n                    {/* <Route>\n                        <NoMatch404/>\n                    </Route> */}\n                </Switch>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n\tsetCollection:(data) => dispatch(getCollectionsDataFromDbAction(data))\n})\n\n\nexport default connect(null,mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}