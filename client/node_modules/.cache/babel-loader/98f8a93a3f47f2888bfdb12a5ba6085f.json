{"ast":null,"code":"var _jsxFileName = \"/home/rafal/Desktop/ecommerce-react-advanced/unikas-dev-shop/src/pages/shoppage/shoppage.jsx\";\nimport React from 'react';\nimport CollectionOverview from '../../components/collectionsOverview/collectionsOverview';\nimport { Route, Switch } from 'react-router-dom';\nimport CollectionPage from '../collection/collection';\nimport NoMatch404 from '../../components/404/404';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/withSpinner/withSpinner';\nimport { selectCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport { createStructuredSelector } from 'reselect';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const setCollection = this.props.setCollection;\n    setCollection();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: otherProps => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        loading: isCollectionFetching\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: otherProps => React.createElement(CollectionPageWithSpinner, Object.assign({\n        loading: isCollectionLoaded ? true : false\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCollection: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/rafal/Desktop/ecommerce-react-advanced/unikas-dev-shop/src/pages/shoppage/shoppage.jsx"],"names":["React","CollectionOverview","Route","Switch","CollectionPage","NoMatch404","connect","fetchCollectionsStartAsync","WithSpinner","selectCollectionFetching","selectIsCollectionLoaded","createStructuredSelector","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","setCollection","props","render","match","isCollectionFetching","isCollectionLoaded","path","otherProps","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,0DAA/B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,8BAAzC;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,SAAQC,wBAAR,EAAiCC,wBAAjC,QAAgE,iCAAhE;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAGA,MAAMC,6BAA6B,GAAGJ,WAAW,CAACP,kBAAD,CAAjD;AACA,MAAMY,yBAAyB,GAAGL,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMU,QAAN,SAAuBd,KAAK,CAACe,SAA7B,CAAuC;AAEtCC,EAAAA,iBAAiB,GAAE;AAAA,UACXC,aADW,GACM,KAAKC,KADX,CACXD,aADW;AAElBA,IAAAA,aAAa;AACb;;AAEEE,EAAAA,MAAM,GAAG;AAAA,wBAC6C,KAAKD,KADlD;AAAA,UACJE,KADI,eACJA,KADI;AAAA,UACEC,oBADF,eACEA,oBADF;AAAA,UACuBC,kBADvB,eACuBA,kBADvB;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKF,KAAK,CAACG,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGC,UAAD,IAAgB,oBAAC,6BAAD;AAA+B,QAAA,OAAO,EAAEH;AAAxC,SAAkEG,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKJ,KAAK,CAACG,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGC,UAAD,IAAgB,oBAAC,yBAAD;AAA2B,QAAA,OAAO,EAAEF,kBAAkB,GAAG,IAAH,GAAS;AAA/D,SAA0EE,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;AAWH;;AApBkC;;AAuBvC,MAAMC,eAAe,GAAGd,wBAAwB,CAAC;AAC7CU,EAAAA,oBAAoB,EAACZ,wBADwB;AAE7Ca,EAAAA,kBAAkB,EAACZ;AAF0B,CAAD,CAAhD;;AAMA,MAAMgB,kBAAkB,GAAIC,QAAD,KAAe;AACzCV,EAAAA,aAAa,EAAC,MAAMU,QAAQ,CAACpB,0BAA0B,EAA3B;AADa,CAAf,CAA3B;;AAKA,eAAeD,OAAO,CAACmB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CZ,QAA5C,CAAf","sourcesContent":["import React from 'react';\nimport CollectionOverview from '../../components/collectionsOverview/collectionsOverview';\nimport { Route, Switch } from 'react-router-dom';\nimport CollectionPage from '../collection/collection';\nimport NoMatch404 from '../../components/404/404'\nimport {connect} from 'react-redux'\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shopActions'\nimport WithSpinner from '../../components/withSpinner/withSpinner'\nimport {selectCollectionFetching,selectIsCollectionLoaded} from '../../redux/shop/shop.selectors'\nimport {createStructuredSelector} from 'reselect'\n\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n   \n\tcomponentDidMount(){\n\t\tconst {setCollection} = this.props;\n\t\tsetCollection();\n\t}\n\n    render() {\n\t\tconst {match,isCollectionFetching,isCollectionLoaded} = this.props;\n        return (\n            <div>\n                <Switch>\n                    <Route exact path={`${match.path}`} render={(otherProps) => <CollectionOverviewWithSpinner loading={isCollectionFetching} {...otherProps}/>} />\n                    <Route path={`${match.path}/:collectionId`} render={(otherProps) => <CollectionPageWithSpinner loading={isCollectionLoaded ? true :false} {...otherProps}/>} />\n                    {/* <Route>\n                        <NoMatch404/>\n                    </Route> */}\n                </Switch>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching:selectCollectionFetching,\n    isCollectionLoaded:selectIsCollectionLoaded\n})\n\n\nconst mapDispatchToProps = (dispatch) => ({\n\tsetCollection:() => dispatch(fetchCollectionsStartAsync())\n})\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}