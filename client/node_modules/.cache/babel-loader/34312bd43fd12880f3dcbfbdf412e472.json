{"ast":null,"code":"import _defineProperty from \"/home/rafal/Desktop/ecommerce-react/unikas-dev-shop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SHOP_DATA } from '../../pages/shoppage/shop.data';\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  // find existed item\n  const existedItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); // if exist loop cartItems, \n  //return array \n  // find item and when found return update item else return item\n\n  if (existedItem) {\n    return cartItems.map(item => item.id === cartItemToAdd.id ? _objectSpread({}, item, {\n      quantity: item.quantity + 1\n    }) : item);\n  } else {\n    return [...cartItems, _objectSpread({}, cartItemToAdd, {\n      quantity: 1\n    })];\n  }\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  return [...cartItems.filter(item => item.id !== cartItemToRemove.id)];\n};\nexport const addItemQuantity = (cartItems, cartItemToIncrease) => {\n  const foundedItem = cartItems.map(item => {\n    if (item.id === cartItemToIncrease.id) {\n      return _objectSpread({}, cartItemToIncrease, {\n        quantity: 10\n      });\n    }\n  });\n  console.log(['a', 'b']);\n};","map":{"version":3,"sources":["/home/rafal/Desktop/ecommerce-react/unikas-dev-shop/src/redux/cart/cartUtils.js"],"names":["SHOP_DATA","addItemToCart","cartItems","cartItemToAdd","existedItem","find","cartItem","id","map","item","quantity","removeItemFromCart","cartItemToRemove","filter","addItemQuantity","cartItemToIncrease","foundedItem","console","log"],"mappings":";;;;;;AAAA,SAAQA,SAAR,QAAwB,gCAAxB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,SAAD,EAAWC,aAAX,KAA6B;AACtD;AACA,QAAMC,WAAW,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAzD,CAApB,CAFsD,CAItD;AACA;AACA;;AACA,MAAGH,WAAH,EAAe;AACX,WAAOF,SAAS,CAACM,GAAV,CAAcC,IAAI,IACrBA,IAAI,CAACF,EAAL,KAAYJ,aAAa,CAACI,EAA1B,qBACIE,IADJ;AACSC,MAAAA,QAAQ,EAACD,IAAI,CAACC,QAAL,GAAgB;AADlC,SACuCD,IAFpC,CAAP;AAIH,GALD,MAKK;AACD,WAAO,CAAC,GAAGP,SAAJ,oBAAmBC,aAAnB;AAAkCO,MAAAA,QAAQ,EAAC;AAA3C,OAAP;AACH;AACJ,CAfM;AAiBP,OAAO,MAAMC,kBAAkB,GAAG,CAACT,SAAD,EAAYU,gBAAZ,KAAiC;AAC/D,SAAO,CAAC,GAAGV,SAAS,CAACW,MAAV,CAAiBJ,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYK,gBAAgB,CAACL,EAAtD,CAAJ,CAAP;AACH,CAFM;AAKP,OAAO,MAAMO,eAAe,GAAG,CAACZ,SAAD,EAAWa,kBAAX,KAAkC;AAC9D,QAAMC,WAAW,GAAGd,SAAS,CAACM,GAAV,CAAcC,IAAI,IAAI;AACrC,QAAGA,IAAI,CAACF,EAAL,KAAYQ,kBAAkB,CAACR,EAAlC,EAAqC;AACjC,+BACOQ,kBADP;AAEIL,QAAAA,QAAQ,EAAC;AAFb;AAIH;AACJ,GAPkB,CAApB;AAQCO,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,GAAD,EAAK,GAAL,CAAZ;AACH,CAVM","sourcesContent":["import {SHOP_DATA} from '../../pages/shoppage/shop.data'\n\nexport const addItemToCart = (cartItems,cartItemToAdd) => {\n    // find existed item\n    const existedItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n \n    // if exist loop cartItems, \n    //return array \n    // find item and when found return update item else return item\n    if(existedItem){\n        return cartItems.map(item => \n            item.id === cartItemToAdd.id ?\n            {...item,quantity:item.quantity + 1} : item\n            )\n    }else{\n        return [...cartItems, {...cartItemToAdd, quantity:1}]\n    }\n}\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n    return [...cartItems.filter(item => item.id !== cartItemToRemove.id)]\n}\n\n\nexport const addItemQuantity = (cartItems,cartItemToIncrease) => {\n   const foundedItem = cartItems.map(item => {\n        if(item.id === cartItemToIncrease.id){\n            return {\n                ...cartItemToIncrease,\n                quantity:10\n            }\n        }\n    })\n    console.log(['a','b'])\n}\n\n"]},"metadata":{},"sourceType":"module"}