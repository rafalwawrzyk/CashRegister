{"ast":null,"code":"import { GET_SHOP_DATA_FROM_DB, ShopActionsTypesAsync } from './shopActionTypes';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; // export const getCollectionsDataFromDbAction = (data) => {\n//     return{\n//         type:GET_SHOP_DATA_FROM_DB,\n//         payload:data\n//     }\n// }\n\nexport const fetchCollectionsStart = () => {\n  return {\n    type: ShopActionsTypesAsync.FETCH_COLLECTIONS_START\n  };\n};\nexport const fetchCollectionSuccess = collection => {\n  return {\n    type: ShopActionsTypesAsync.FETCH_COLLECTIONS_SUCCESS,\n    payload: collection\n  };\n};\nexport const fetchCollectionFailure = errorMessage => {\n  return {\n    type: ShopActionsTypesAsync.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n  };\n};\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('shop');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsFromDb = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionsFromDb));\n    }).catch(error => {\n      return dispatch(fetchCollectionFailure(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/src/redux/shop/shopActions.js"],"names":["GET_SHOP_DATA_FROM_DB","ShopActionsTypesAsync","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","collection","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","get","then","snapshot","collectionsFromDb","catch","error","message"],"mappings":"AAAA,SAAQA,qBAAR,EAA+BC,qBAA/B,QAA2D,mBAA3D;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD,C,CAKA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACvC,SAAO;AACHC,IAAAA,IAAI,EAACJ,qBAAqB,CAACK;AADxB,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,sBAAsB,GAAIC,UAAD,IAAgB;AAClD,SAAO;AACHH,IAAAA,IAAI,EAACJ,qBAAqB,CAACQ,yBADxB;AAEHC,IAAAA,OAAO,EAACF;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,sBAAsB,GAAIC,YAAD,IAAkB;AACpD,SAAO;AACHP,IAAAA,IAAI,EAACJ,qBAAqB,CAACY,yBADxB;AAEHH,IAAAA,OAAO,EAACE;AAFL,GAAP;AAIH,CALM;AASP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACM,UAAV,CAAqB,MAArB,CAAtB;AACAO,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CACRC,GADL,GAEKC,IAFL,CAEWC,QAAD,IAAc;AAChB,YAAMC,iBAAiB,GAAGjB,+BAA+B,CAACgB,QAAD,CAAzD;AACAJ,MAAAA,QAAQ,CAACR,sBAAsB,CAACa,iBAAD,CAAvB,CAAR;AACH,KALL,EAMKC,KANL,CAMWC,KAAK,IAAI;AACZ,aAAOP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAAf;AACH,KARL;AASH,GAZD;AAaH,CAdM","sourcesContent":["import {GET_SHOP_DATA_FROM_DB, ShopActionsTypesAsync} from './shopActionTypes'\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\n\n\n\n// export const getCollectionsDataFromDbAction = (data) => {\n//     return{\n//         type:GET_SHOP_DATA_FROM_DB,\n//         payload:data\n//     }\n// }\n\n\nexport const fetchCollectionsStart = () => {\n    return {\n        type:ShopActionsTypesAsync.FETCH_COLLECTIONS_START\n    }\n}\n\nexport const fetchCollectionSuccess = (collection) => {\n    return {\n        type:ShopActionsTypesAsync.FETCH_COLLECTIONS_SUCCESS,\n        payload:collection\n    }\n}\n\nexport const fetchCollectionFailure = (errorMessage) => {\n    return {\n        type:ShopActionsTypesAsync.FETCH_COLLECTIONS_FAILURE,\n        payload:errorMessage\n    }\n}\n\n\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('shop');\n        dispatch(fetchCollectionsStart())\n        collectionRef\n            .get()\n            .then((snapshot) => {\n                const collectionsFromDb = convertCollectionsSnapshotToMap(snapshot);\n                dispatch(fetchCollectionSuccess(collectionsFromDb))\n            })\n            .catch(error => {\n                return dispatch(fetchCollectionFailure(error.message))\n            })\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}