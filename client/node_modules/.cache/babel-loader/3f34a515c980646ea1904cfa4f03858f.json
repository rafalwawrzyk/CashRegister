{"ast":null,"code":"import _defineProperty from \"/home/rafal/Desktop/ecommerce-react-advanced/unikas-dev-shop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { SHOP_DATA } from '../redux/shop/shop.data';\nconst FIREBASE_CONFIG = {\n  apiKey: 'AIzaSyAtPK2nCve6w8J-mgB4eG6wvZEbS3mCq7w',\n  authDomain: 'ecommerce-react-db-231fa.firebaseapp.com',\n  databaseURL: 'https://ecommerce-react-db-231fa.firebaseio.com',\n  projectId: 'ecommerce-react-db-231fa',\n  storageBucket: '',\n  messagingSenderId: '601861092311',\n  appId: '1:601861092311:web:ebf370f0fc12384b51d192'\n}; // create data, snapshot\n// return user ref\n// STORE AUTHENTICATE BY GOOGLE USER TO OUR DDB\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('Error created user', error.message);\n    }\n  }\n\n  return userRef;\n}; // settings\n\nfirebase.initializeApp(FIREBASE_CONFIG);\nexport const auth = firebase.auth(); // DATABASE\n\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport const addCollectionAndDocs = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey); // multiple calls in one time is batch\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(object => {\n    const newDocRef = collectionRef.doc().set(object);\n    console.log(newDocRef);\n  });\n};\nexport default firebase;","map":{"version":3,"sources":["/home/rafal/Desktop/ecommerce-react-advanced/unikas-dev-shop/src/firebase/firebase.utils.js"],"names":["firebase","SHOP_DATA","FIREBASE_CONFIG","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","addCollectionAndDocs","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","object","newDocRef"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,MAAMC,eAAe,GAAG;AACvBC,EAAAA,MAAM,EAAE,yCADe;AAEvBC,EAAAA,UAAU,EAAE,0CAFW;AAGvBC,EAAAA,WAAW,EAAE,iDAHU;AAIvBC,EAAAA,SAAS,EAAE,0BAJY;AAKvBC,EAAAA,aAAa,EAAE,EALQ;AAMvBC,EAAAA,iBAAiB,EAAE,cANI;AAOvBC,EAAAA,KAAK,EAAE;AAPgB,CAAxB,C,CAUA;AACA;AACA;;AAEA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC5E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACbC,WADa,GACUT,QADV,CACbS,WADa;AAAA,UACAC,KADA,GACUV,QADV,CACAU,KADA;AAErB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACH,YAAMV,OAAO,CAACW,GAAR;AACLJ,QAAAA,WADK;AAELC,QAAAA,KAFK;AAGLC,QAAAA;AAHK,SAIFV,cAJE,EAAN;AAMA,KAPD,CAOE,OAAOa,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAK,CAACG,OAAxC;AACA;AACD;;AAED,SAAOf,OAAP;AACA,CAtBM,C,CAwBP;;AACAb,QAAQ,CAAC6B,aAAT,CAAuB3B,eAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb,C,CAEP;;AACA,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AAEAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,OAAO,MAAMM,oBAAoB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACpE,QAAMC,aAAa,GAAG1B,SAAS,CAAC2B,UAAV,CAAqBH,aAArB,CAAtB,CADoE,CAEnE;;AACD,QAAMI,KAAK,GAAG5B,SAAS,CAAC4B,KAAV,EAAd;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAsBC,MAAD,IAAY;AAChC,UAAMC,SAAS,GAAGL,aAAa,CAACzB,GAAd,GAAoBS,GAApB,CAAwBoB,MAAxB,CAAlB;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,SAAZ;AACA,GAHD;AAMA,CAVM;AAYP,eAAe7C,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { SHOP_DATA } from '../redux/shop/shop.data';\n\nconst FIREBASE_CONFIG = {\n\tapiKey: 'AIzaSyAtPK2nCve6w8J-mgB4eG6wvZEbS3mCq7w',\n\tauthDomain: 'ecommerce-react-db-231fa.firebaseapp.com',\n\tdatabaseURL: 'https://ecommerce-react-db-231fa.firebaseio.com',\n\tprojectId: 'ecommerce-react-db-231fa',\n\tstorageBucket: '',\n\tmessagingSenderId: '601861092311',\n\tappId: '1:601861092311:web:ebf370f0fc12384b51d192'\n};\n\n// create data, snapshot\n// return user ref\n// STORE AUTHENTICATE BY GOOGLE USER TO OUR DDB\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n\tif (!userAuth) return;\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\n\tconst snapShot = await userRef.get();\n\n\tif (!snapShot.exists) {\n\t\tconst { displayName, email } = userAuth;\n\t\tconst createdAt = new Date();\n\n\t\ttry {\n\t\t\tawait userRef.set({\n\t\t\t\tdisplayName,\n\t\t\t\temail,\n\t\t\t\tcreatedAt,\n\t\t\t\t...additionalData\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log('Error created user', error.message);\n\t\t}\n\t}\n\n\treturn userRef;\n};\n\n// settings\nfirebase.initializeApp(FIREBASE_CONFIG);\n\nexport const auth = firebase.auth();\n\n// DATABASE\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nprovider.setCustomParameters({ prompt: 'select_account' });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport const addCollectionAndDocs = (collectionKey, objectsToAdd) => {\n\tconst collectionRef = firestore.collection(collectionKey);\n\t\t// multiple calls in one time is batch\n\tconst batch = firestore.batch();\n\tobjectsToAdd.forEach((object) => {\n\t\tconst newDocRef = collectionRef.doc().set(object);\n\t\tconsole.log(newDocRef)\n\t});\n\n\n};\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}