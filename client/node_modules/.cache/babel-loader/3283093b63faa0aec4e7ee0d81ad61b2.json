{"ast":null,"code":"var _jsxFileName = \"/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/src/components/signup/signup.jsx\";\nimport React, { Component } from 'react';\nimport FormInput from '../formInput/formInput';\nimport CustomButton from '../customButton/customButton';\nimport { StyledWrapper, Title, Subtitle } from './styles';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/userActions';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n      const signUpWithEmail = this.props.signUpWithEmail;\n\n      if (password !== confirmPassword) {\n        alert(\"password don't match\");\n        return;\n      }\n\n      signUpWithEmail({\n        displayName,\n        email,\n        password\n      }); // try{\n      //     const {user} = await auth.createUserWithEmailAndPassword(email,password);\n      //     await createUserProfileDocument(user, {displayName})\n      //     this.setState({\n      //         displayName: '',\n      //         email: '',\n      //         password: '',\n      //         confirmPassword: ''\n      //     })\n      //     console.log(user)\n      // }catch(err){\n      //     console.log('Something went wrong', err)\n      // }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(StyledWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"I do not have a account\"), React.createElement(Subtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Sign Up\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpWithEmail: () => dispatch(signUpStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/src/components/signup/signup.jsx"],"names":["React","Component","FormInput","CustomButton","StyledWrapper","Title","Subtitle","connect","signUpStart","auth","createUserProfileDocument","SignUp","constructor","handleSubmit","e","preventDefault","state","displayName","email","password","confirmPassword","signUpWithEmail","props","alert","handleChange","setState","target","name","value","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FormInput from '../formInput/formInput';\nimport CustomButton from '../customButton/customButton';\nimport { StyledWrapper, Title, Subtitle } from './styles';\nimport {connect} from 'react-redux'\nimport {signUpStart} from '../../redux/user/userActions'\n\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nclass SignUp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tdisplayName: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: ''\n\t\t};\n\t}\n\n\thandleSubmit = async (e) => {\n        e.preventDefault();\n        const { displayName, email, password, confirmPassword } = this.state;\n        const {signUpWithEmail} = this.props;\n\n        if(password !== confirmPassword){\n            alert(`password don't match`)\n            return;\n        }\n\n        signUpWithEmail({\n            displayName,\n            email,\n            password\n        })\n\n        // try{\n        //     const {user} = await auth.createUserWithEmailAndPassword(email,password);\n        //     await createUserProfileDocument(user, {displayName})\n        //     this.setState({\n        //         displayName: '',\n        //         email: '',\n        //         password: '',\n        //         confirmPassword: ''\n        //     })\n        //     console.log(user)\n        // }catch(err){\n        //     console.log('Something went wrong', err)\n        // }\n    };\n\n\thandleChange = (e) => {\n        this.setState({\n            [e.target.name]:e.target.value\n            \n        })\n    };\n\n\trender() {\n\t\tconst { displayName, email, password, confirmPassword } = this.state;\n\t\treturn (\n\t\t\t<StyledWrapper>\n\t\t\t\t<Title>I do not have a account</Title>\n\t\t\t\t<Subtitle>Sign up with your email and password</Subtitle>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n                    <FormInput \n                    type=\"text\" \n                    name=\"displayName\" \n                    value={displayName} \n                    onChange={this.handleChange}\n                    label=\"Display Name\"\n                    required \n                    />\n                     <FormInput \n                    type=\"email\" \n                    name=\"email\" \n                    value={email} \n                    onChange={this.handleChange}\n                    label=\"Email\"\n                    required \n                    />\n                     <FormInput \n                    type=\"password\" \n                    name=\"password\" \n                    value={password} \n                    onChange={this.handleChange} \n                    label=\"Password\"\n                    required\n                    />\n                     <FormInput \n                    type=\"password\" \n                    name=\"confirmPassword\" \n                    value={confirmPassword} \n                    onChange={this.handleChange} \n                    label=\"Confirm Password\"\n                    required\n                    />\n                    <CustomButton type=\"submit\">Sign Up</CustomButton>\n\t\t\t\t</form>\n\t\t\t</StyledWrapper>\n\t\t);\n\t}\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    signUpWithEmail: () => dispatch(signUpStart())\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}