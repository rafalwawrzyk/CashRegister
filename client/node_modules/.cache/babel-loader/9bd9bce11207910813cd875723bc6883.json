{"ast":null,"code":"import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport actionType from './userActionTypes';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'; //   this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n//     if(userAuth){\n//       const userRef = await createUserProfileDocument(userAuth);\n//       userRef.onSnapshot( snapshot => {\n//         // const userFromSnapshot =  snapshot.data();\n//         setCurrentUser({\n//             ...snapshot.data(),\n//             id:snapshot.id\n//           }\n//         )\n//       })\n//     }else{\n//       //return null\n//       setCurrentUser(null)\n//     }\n//     // addCollectionAndDocs('shop',this.props.shopItemsArray.map(({title,items}) => ({title,items})))\n// })\n\nexport function* signInWithGoogle() {\n  try {\n    const user = yield auth.signInWithPopup(googleProvider);\n    console.log(user);\n  } catch (err) {}\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(actionType.GOOGLE_SIGN_IN_START);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/src/redux/user/userSagas.js"],"names":["put","takeLatest","all","call","actionType","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","console","log","err","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,UAAZ,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAAQC,IAAR,EAAaC,cAAb,EAA4BC,yBAA5B,QAA4D,+BAA5D,C,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGF,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAMC,IAAI,GAAG,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAnB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GAHD,CAGC,OAAMI,GAAN,EAAU,CAEV;AACJ;AAGD,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMb,UAAU,CAACG,UAAU,CAACW,oBAAZ,CAAhB;AACH;AAED,OAAO,UAAUC,SAAV,GAAqB;AACxB,QAAMd,GAAG,CACL,CACIC,IAAI,CAACW,mBAAD,CADR,CADK,CAAT;AAKH","sourcesContent":["import {put,takeLatest,all,call} from 'redux-saga/effects'\nimport actionType from './userActionTypes'\nimport {auth,googleProvider,createUserProfileDocument} from '../../firebase/firebase.utils'\n\n  //   this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //     if(userAuth){\n  //       const userRef = await createUserProfileDocument(userAuth);\n  //       userRef.onSnapshot( snapshot => {\n  //         // const userFromSnapshot =  snapshot.data();\n  //         setCurrentUser({\n  //             ...snapshot.data(),\n  //             id:snapshot.id\n  //           }\n  //         )\n  //       })\n  //     }else{\n  //       //return null\n  //       setCurrentUser(null)\n  //     }\n  //     // addCollectionAndDocs('shop',this.props.shopItemsArray.map(({title,items}) => ({title,items})))\n\n  // })\n\n\nexport function* signInWithGoogle(){\n    try{\n        const user = yield auth.signInWithPopup(googleProvider);\n        console.log(user)\n    }catch(err){\n\n    }\n}\n\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(actionType.GOOGLE_SIGN_IN_START);\n}\n\nexport function* userSagas(){\n    yield all(\n        [\n            call(onGoogleSignInStart)\n        ]\n    )\n}"]},"metadata":{},"sourceType":"module"}