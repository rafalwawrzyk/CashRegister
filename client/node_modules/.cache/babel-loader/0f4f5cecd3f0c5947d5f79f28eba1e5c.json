{"ast":null,"code":"import _defineProperty from \"/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existedItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existedItem) {\n    return cartItems.map(item => item.id === cartItemToAdd.id ? _objectSpread({}, item, {\n      quantity: item.quantity + 1\n    }) : item);\n  } else {\n    return [...cartItems, _objectSpread({}, cartItemToAdd, {\n      quantity: 1\n    })];\n  }\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  return [...cartItems.filter(item => item.id !== cartItemToRemove.id)];\n};\nexport const removeItemQuantity = (cartItems, cartItemToRemove) => {\n  const existingItem = cartItems.find(item => item.id === cartItemToRemove.id);\n\n  if (existingItem.quantity === 1) {\n    return cartItems.filter(item => item.id !== existingItem.id);\n  } else if (existingItem.quantity > 1) {\n    return cartItems.map(item => {\n      if (item.id === cartItemToRemove.id) {\n        return _objectSpread({}, item, {\n          quantity: item.quantity - 1\n        });\n      }\n\n      return item;\n    });\n  }\n};","map":{"version":3,"sources":["/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/client/src/redux/cart/cartUtils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existedItem","find","cartItem","id","map","item","quantity","removeItemFromCart","cartItemToRemove","filter","removeItemQuantity","existingItem"],"mappings":";;;;;;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAWC,aAAX,KAA6B;AACtD,QAAMC,WAAW,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAzD,CAApB;;AAEA,MAAGH,WAAH,EAAe;AACX,WAAOF,SAAS,CAACM,GAAV,CAAcC,IAAI,IACrBA,IAAI,CAACF,EAAL,KAAYJ,aAAa,CAACI,EAA1B,qBACIE,IADJ;AACSC,MAAAA,QAAQ,EAACD,IAAI,CAACC,QAAL,GAAgB;AADlC,SACuCD,IAFpC,CAAP;AAIH,GALD,MAKK;AACD,WAAO,CAAC,GAAGP,SAAJ,oBAAmBC,aAAnB;AAAkCO,MAAAA,QAAQ,EAAC;AAA3C,OAAP;AACH;AACJ,CAXM;AAaP,OAAO,MAAMC,kBAAkB,GAAG,CAACT,SAAD,EAAYU,gBAAZ,KAAiC;AAC/D,SAAO,CAAC,GAAGV,SAAS,CAACW,MAAV,CAAiBJ,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYK,gBAAgB,CAACL,EAAtD,CAAJ,CAAP;AACH,CAFM;AAKP,OAAO,MAAMO,kBAAkB,GAAG,CAACZ,SAAD,EAAWU,gBAAX,KAAgC;AAC/D,QAAMG,YAAY,GAAGb,SAAS,CAACG,IAAV,CAAeI,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYK,gBAAgB,CAACL,EAApD,CAArB;;AAEA,MAAGQ,YAAY,CAACL,QAAb,KAA0B,CAA7B,EAA+B;AAC3B,WAAOR,SAAS,CAACW,MAAV,CAAiBJ,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYQ,YAAY,CAACR,EAAlD,CAAP;AACH,GAFD,MAGK,IAAGQ,YAAY,CAACL,QAAb,GAAwB,CAA3B,EAA6B;AACjC,WAAOR,SAAS,CAACM,GAAV,CAAcC,IAAI,IAAI;AACzB,UAAGA,IAAI,CAACF,EAAL,KAAYK,gBAAgB,CAACL,EAAhC,EAAmC;AAC/B,iCACOE,IADP;AAEIC,UAAAA,QAAQ,EAACD,IAAI,CAACC,QAAL,GAAgB;AAF7B;AAIH;;AACD,aAAOD,IAAP;AACH,KARM,CAAP;AASA;AAIH,CApBM","sourcesContent":["\nexport const addItemToCart = (cartItems,cartItemToAdd) => {\n    const existedItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n    if(existedItem){\n        return cartItems.map(item => \n            item.id === cartItemToAdd.id ?\n            {...item,quantity:item.quantity + 1} : item\n            )\n    }else{\n        return [...cartItems, {...cartItemToAdd, quantity:1}]\n    }\n}\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n    return [...cartItems.filter(item => item.id !== cartItemToRemove.id)]\n}\n\n\nexport const removeItemQuantity = (cartItems,cartItemToRemove) => {\n   const existingItem = cartItems.find(item => item.id === cartItemToRemove.id);\n\n   if(existingItem.quantity === 1){\n       return cartItems.filter(item => item.id !== existingItem.id)\n   }\n   else if(existingItem.quantity > 1){\n    return cartItems.map(item => {\n        if(item.id === cartItemToRemove.id){\n            return {\n                ...item,\n                quantity:item.quantity - 1\n            }\n        }\n        return item\n    })\n   }\n\n\n   \n}"]},"metadata":{},"sourceType":"module"}