{"ast":null,"code":"var _jsxFileName = \"/home/rafal/Desktop/ecommerce-react-advanced/unikas-dev-shop/src/pages/shoppage/shoppage.jsx\";\nimport React from 'react';\nimport CollectionOverview from '../../components/collectionsOverview/collectionsOverview';\nimport { Route, Switch } from 'react-router-dom';\nimport CategoryPage from '../collection/collection';\nimport NoMatch404 from '../../components/404/404';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/withSpinner/withSpinner';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CategoryPageWithSpinner = WithSpinner(CategoryPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const setCollection = this.props.setCollection;\n    setCollection();\n    console.log(this.props);\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: otherProps => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        loading: isCollectionFetching\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: otherProps => React.createElement(CategoryPageWithSpinner, Object.assign({\n        loading: isCollectionFetching\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isCollectionFetching: state.shopReducer.isFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCollection: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/rafal/Desktop/ecommerce-react-advanced/unikas-dev-shop/src/pages/shoppage/shoppage.jsx"],"names":["React","CollectionOverview","Route","Switch","CategoryPage","NoMatch404","connect","fetchCollectionsStartAsync","WithSpinner","CollectionOverviewWithSpinner","CategoryPageWithSpinner","ShopPage","Component","componentDidMount","setCollection","props","console","log","render","match","isCollectionFetching","path","otherProps","mapStateToProps","state","shopReducer","isFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,0DAA/B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,8BAAzC;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAGA,MAAMC,6BAA6B,GAAGD,WAAW,CAACP,kBAAD,CAAjD;AACA,MAAMS,uBAAuB,GAAGF,WAAW,CAACJ,YAAD,CAA3C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAKtCC,EAAAA,iBAAiB,GAAE;AAAA,UACXC,aADW,GACM,KAAKC,KADX,CACXD,aADW;AAElBA,IAAAA,aAAa;AACbE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACA;;AAEEG,EAAAA,MAAM,GAAG;AAAA,wBAC0B,KAAKH,KAD/B;AAAA,UACJI,KADI,eACJA,KADI;AAAA,UACEC,oBADF,eACEA,oBADF;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGC,UAAD,IAAgB,oBAAC,6BAAD;AAA+B,QAAA,OAAO,EAAEF;AAAxC,SAAkEE,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKH,KAAK,CAACE,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGC,UAAD,IAAgB,oBAAC,uBAAD;AAAyB,QAAA,OAAO,EAAEF;AAAlC,SAA4DE,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;AAWH;;AAxBkC;;AA2BvC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AACnCJ,EAAAA,oBAAoB,EAACI,KAAK,CAACC,WAAN,CAAkBC;AADJ,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACzCd,EAAAA,aAAa,EAAC,MAAMc,QAAQ,CAACrB,0BAA0B,EAA3B;AADa,CAAf,CAA3B;;AAKA,eAAeD,OAAO,CAACiB,eAAD,EAAiBI,kBAAjB,CAAP,CAA4ChB,QAA5C,CAAf","sourcesContent":["import React from 'react';\nimport CollectionOverview from '../../components/collectionsOverview/collectionsOverview';\nimport { Route, Switch } from 'react-router-dom';\nimport CategoryPage from '../collection/collection';\nimport NoMatch404 from '../../components/404/404'\nimport {connect} from 'react-redux'\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shopActions'\nimport WithSpinner from '../../components/withSpinner/withSpinner'\n\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CategoryPageWithSpinner = WithSpinner(CategoryPage)\n\nclass ShopPage extends React.Component {\n   \n\n\n\n\tcomponentDidMount(){\n\t\tconst {setCollection} = this.props;\n\t\tsetCollection();\n\t\tconsole.log(this.props)\n\t}\n\n    render() {\n\t\tconst {match,isCollectionFetching} = this.props;\n        return (\n            <div>\n                <Switch>\n                    <Route exact path={`${match.path}`} render={(otherProps) => <CollectionOverviewWithSpinner loading={isCollectionFetching} {...otherProps}/>} />\n                    <Route path={`${match.path}/:collectionId`} render={(otherProps) => <CategoryPageWithSpinner loading={isCollectionFetching} {...otherProps}/>} />\n                    {/* <Route>\n                        <NoMatch404/>\n                    </Route> */}\n                </Switch>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n\tisCollectionFetching:state.shopReducer.isFetching\n}) \n\n\nconst mapDispatchToProps = (dispatch) => ({\n\tsetCollection:() => dispatch(fetchCollectionsStartAsync())\n})\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}