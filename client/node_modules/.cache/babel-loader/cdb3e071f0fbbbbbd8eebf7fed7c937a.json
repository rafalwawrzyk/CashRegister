{"ast":null,"code":"import _defineProperty from \"/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/src/components/signup/signup.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport FormInput from '../formInput/formInput';\nimport CustomButton from '../customButton/customButton';\nimport { StyledWrapper, Title, Subtitle } from './styles';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/userActions';\nimport { useState, useEffect } from 'react';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nconst SignUp = () => {\n  // constructor() {\n  // \tsuper();\n  // \tthis.state = {\n  // \t\tdisplayName: '',\n  // \t\temail: '',\n  // \t\tpassword: '',\n  // \t\tconfirmPassword: ''\n  // \t};\n  // }\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const signUpWithEmail = this.props.signUpWithEmail;\n\n    if (password !== confirmPassword) {\n      alert(\"password don't match\");\n      return;\n    }\n\n    signUpWithEmail({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(StyledWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(Subtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpWithEmail: user => dispatch(signUpStart(user))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/rafal/Desktop/ecommerce-react-advanced (redux-saga)/unikas-dev-shop/src/components/signup/signup.jsx"],"names":["React","FormInput","CustomButton","StyledWrapper","Title","Subtitle","connect","signUpStart","useState","useEffect","auth","createUserProfileDocument","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","e","preventDefault","signUpWithEmail","props","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FormInput from '../formInput/formInput';\nimport CustomButton from '../customButton/customButton';\nimport { StyledWrapper, Title, Subtitle } from './styles';\nimport {connect} from 'react-redux'\nimport {signUpStart} from '../../redux/user/userActions'\nimport {useState, useEffect} from 'react'\n\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nconst SignUp = () => {\n\t// constructor() {\n\t// \tsuper();\n\t// \tthis.state = {\n\t// \t\tdisplayName: '',\n\t// \t\temail: '',\n\t// \t\tpassword: '',\n\t// \t\tconfirmPassword: ''\n\t// \t};\n    // }\n    \n    const [userCredentials,setUserCredentials] = useState({\n            displayName: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: ''\n    })\n\n    const { displayName, email, password, confirmPassword } = userCredentials;\n\n\n\tconst handleSubmit = async (e) => {\n        e.preventDefault();\n        const {signUpWithEmail} = this.props;\n\n        if(password !== confirmPassword){\n            alert(`password don't match`)\n            return;\n        }\n\n        signUpWithEmail({\n            displayName,\n            email,\n            password\n        })\n    };\n\n\tconst handleChange = (e) => {\n        setUserCredentials({\n            ...userCredentials,\n            [e.target.name]:e.target.value\n            \n        })\n    };\n\n\t\treturn (\n\t\t\t<StyledWrapper>\n\t\t\t\t<Title>I do not have a account</Title>\n\t\t\t\t<Subtitle>Sign up with your email and password</Subtitle>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n                    <FormInput \n                    type=\"text\" \n                    name=\"displayName\" \n                    value={displayName} \n                    onChange={handleChange}\n                    label=\"Display Name\"\n                    required \n                    />\n                     <FormInput \n                    type=\"email\" \n                    name=\"email\" \n                    value={email} \n                    onChange={handleChange}\n                    label=\"Email\"\n                    required \n                    />\n                     <FormInput \n                    type=\"password\" \n                    name=\"password\" \n                    value={password} \n                    onChange={this.handleChange} \n                    label=\"Password\"\n                    required\n                    />\n                     <FormInput \n                    type=\"password\" \n                    name=\"confirmPassword\" \n                    value={confirmPassword} \n                    onChange={this.handleChange} \n                    label=\"Confirm Password\"\n                    required\n                    />\n                    <CustomButton type=\"submit\">Sign Up</CustomButton>\n\t\t\t\t</form>\n\t\t\t</StyledWrapper>\n\t\t);\n\t\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    signUpWithEmail: (user) => dispatch(signUpStart(user))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}